- name: wp-install
  hosts: all
  become: yes

  vars:
    wp_db_name: wordpress
    wp_db_user: wordpress
    wp_db_password: "qwerty123"
    ansible_mysql_login_user: root
    ansible_mysql_login_password: "qwerty123"

    debian_packages:
      - apache2
      - ghostscript
      - libapache2-mod-php
      - mysql-server
      - php
      - php-bcmath
      - php-curl
      - php-imagick
      - php-intl
      - php-json
      - php-mbstring
      - php-mysql
      - php-xml
      - php-zip
      - python3-pymysql

    amazon_packages:
      - httpd
      - ghostscript
      - php
      - php-bcmath
      - php-curl
      - php-intl
      - php-json
      - php-mbstring
      - php-mysqlnd
      - php-xml
      - php-zip
      - mariadb105-server       # Залишаємо тільки цю версію
      - mariadb105
      - php-cli
      - php-common
      - php-devel
      - php-pdo
      - unzip
      - python3-pip

  tasks:
    - name: Update cache & install dependencies on Debian
      apt:
        update_cache: yes
        pkg: "{{ debian_packages }}"
        state: present
      when: ansible_os_family == 'Debian'

    - name: Update cache & install dependencies on Amazon Linux
      yum:
        name: "{{ amazon_packages }}"
        state: present
      when: ansible_os_family == 'RedHat'

    - name: Install PyMySQL via pip on Amazon Linux
      pip:
        name: PyMySQL
      when: ansible_os_family == 'RedHat'

    - name: Ensure Apache is started
      service:
        name: "{{ 'apache2' if ansible_os_family == 'Debian' else 'httpd' }}"
        state: started
        enabled: true

    - name: Ensure MariaDB is started on Amazon Linux
      service:
        name: mariadb
        state: started
        enabled: true
      when: ansible_os_family == 'RedHat'

    - name: Ensure MySQL is started on Debian
      service:
        name: mysql
        state: started
        enabled: true
      when: ansible_os_family == 'Debian'

    - name: Create /srv/www directory
      file:
        path: /srv/www
        state: directory
        owner: "{{ 'www-data' if ansible_os_family == 'Debian' else 'apache' }}"
        group: "{{ 'www-data' if ansible_os_family == 'Debian' else 'apache' }}"
        mode: '0755'

    - name: Extract WordPress
      unarchive:
        src: https://wordpress.org/latest.tar.gz
        dest: /srv/www
        remote_src: yes
        creates: /srv/www/wordpress/wp-config-sample.php
      notify:
        - Set permissions

    - name: Create Apache config for WordPress
      copy:
        dest: "{{ '/etc/apache2/sites-available/wordpress.conf' if ansible_os_family == 'Debian' else '/etc/httpd/conf.d/wordpress.conf' }}"
        content: |
          <VirtualHost *:80>
             DocumentRoot /srv/www/wordpress
             <Directory /srv/www/wordpress>
                 Options FollowSymLinks
                 AllowOverride Limit Options FileInfo
                 DirectoryIndex index.php
                 Require all granted
             </Directory>
             <Directory /srv/www/wordpress/wp-content>
                 Options FollowSymLinks
                 Require all granted
             </Directory>
          </VirtualHost>
      notify:
        - Reload Apache

    - name: Enable rewrite module on Debian
      command: a2enmod rewrite
      when: ansible_os_family == 'Debian'
      notify:
        - Reload Apache

    - name: Disable default site on Debian
      command: a2dissite 000-default
      when: ansible_os_family == 'Debian'
      notify:
        - Reload Apache

    - name: Enable wordpress site on Debian
      command: a2ensite wordpress
      when: ansible_os_family == 'Debian'
      notify:
        - Reload Apache

#        login_unix_socket: /var/run/mysqld/mysqld.sock
    - name: create mysql db
      mysql_db:
        name: "{{ wp_db_name }}"
        state: present
        login_unix_socket: /var/run/mysqld/mysqld.sock
      when: ansible_os_family == 'Debian'

    - name: create db user
      mysql_user:
        name: "{{ wp_db_user }}"
        host: localhost
        password: "{{ wp_db_password }}"
        priv: "{{ wp_db_name }}.*:ALL"
        state: present
        login_unix_socket: /var/run/mysqld/mysqld.sock
      notify: Start MYSQL
      when: ansible_os_family == 'Debian'

    - name: Copy sample config
      copy:
        src: /srv/www/wordpress/wp-config-sample.php
        dest: /srv/www/wordpress/wp-config.php
        remote_src: yes
        owner: "{{ 'www-data' if ansible_os_family == 'Debian' else 'apache' }}"
        group: "{{ 'www-data' if ansible_os_family == 'Debian' else 'apache' }}"
        mode: '0644'

    - name: Set DB name
      lineinfile:
        path: /srv/www/wordpress/wp-config.php
        regexp: "^define\\(\\s*'DB_NAME'.*"
        line: "define('DB_NAME', '{{ wp_db_name }}');"

    - name: Set DB user
      lineinfile:
        path: /srv/www/wordpress/wp-config.php
        regexp: "^define\\(\\s*'DB_USER'.*"
        line: "define('DB_USER', '{{ wp_db_user }}');"

    - name: Set DB password
      lineinfile:
        path: /srv/www/wordpress/wp-config.php
        regexp: "^define\\(\\s*'DB_PASSWORD'.*"
        line: "define('DB_PASSWORD', '{{ wp_db_password }}');"

  handlers:
    - name: Set permissions
      file:
        path: /srv/www
        state: directory
        recurse: yes
        owner: "{{ 'www-data' if ansible_os_family == 'Debian' else 'apache' }}"
        group: "{{ 'www-data' if ansible_os_family == 'Debian' else 'apache' }}"

    - name: Reload Apache
      service:
        name: "{{ 'apache2' if ansible_os_family == 'Debian' else 'httpd' }}"
        state: reloaded
